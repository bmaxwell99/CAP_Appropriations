work_relative_resources = work_per_pop * fund_per_pop,
#adds boolean to show whether recieved min funding
#TODO Fully write out the decision to include Orgeon and OKlahoma in the mins, but not Kentucky
min_funding = if_else(funding <= 140000, T, F)) %>%
#buckets the non minimum states based off population
mutate(pop_cat = if_else(min_funding,
-1,
if_else(pop < 5100000,
1,
if_else(pop < 6150000,
2,
if_else(pop<7600000,
3,
if_else(pop<9000000,
4,
if_else(pop<11100000,
5,
if_else(pop<13000000,
6,
7
)
)
)
)
)
)
)
) %>%
mutate(pop_cat = if_else(pop_cat == -1 & is.element(State, c('South Dakota')), -2, -3)) %>%
#removes extra columns
select(-pop_18, -pop_17, -pop_16, -pop_15, -pop_14, -pop_13, -pop_12, -pop_11,
-dollar_2018, -dollar_2017, -dollar_2016, -dol_est_2015, -dol_est_2014, -dol_est_2013, -dol_est_2012,
-dol_est_2011, -funding_cat_18, -funding_cat_17, -funding_cat_16, -dol_per_pop_18, -dol_per_pop_17, -dol_per_pop_16
)
#adds the area of each state
state_area <-
as.data.frame(state.x77) %>%
select(Area) %>%
mutate(State = row.names(state.x77)) %>%
rbind(data_frame(Area = c(3515, 68) , State = c('Puerto Rico', 'District of Columbia')))
workload_w_state <-
inner_join(workload_w_state, state_area, by = 'State')
remove(workload_calc_11, workload_calc_12, workload_calc_13, workload_calc_14,
workload_calc_15, workload_calc_16, workload_calc_17, workload_calc_18, state_area)
View(workload_w_state)
workload_w_state %>% filter(State == 'South Dakota') %>% View()
sequence_sd <- function(df, col) {
col <- enquo(col)
r <- seq(min(unlist(df %>% select(!!col))), max(unlist(df %>% select(!!col))), sd(unlist(df %>% select(!!col)))/2 )
return(r)
}
format_money2 <- function(x){
r <- paste0("$", formatC(as.numeric(x), format="f", digits=0, big.mark=","))
return(r)
}
#TODO make a visual argument for grouping for the minimums
min_states <-
workload_w_state %>%
filter(#Year == 2018,
min_funding)
#TODO add better labeling
ggplot(data = min_states)+
aes(x = pop,
y = reorder(State, pop),
color = factor(Year)) +
geom_point() +
scale_x_continuous(breaks = min_states %>% sequence_sd(pop))
#TODO add better labeling
ggplot(data = min_states)+
aes(x = pop,
y = reorder(State, pop),
color = factor(Year)) +
geom_point() +
scale_x_continuous(breaks = min_states %>% sequence_sd(pop)) %>%
scale_color_hue(h = c(0,180))
#TODO add better labeling
ggplot(data = min_states)+
aes(x = pop,
y = reorder(State, pop),
color = factor(Year)) +
geom_point() +
scale_x_continuous(breaks = min_states %>% sequence_sd(pop)) +
scale_color_hue(h = c(0,180))
source('workload_calc.R')
View(workload_w_state)
workload_w_state %>% select(Name, pop_cat, min_funding, pop) %>% filter(Year == 2018) %>% View()
workload_w_state %>% select(State, pop_cat, min_funding, pop) %>% filter(Year == 2018) %>% View()
workload_w_state %>% select(State, pop_cat, min_funding, pop) %>% filter(year == 2018) %>% View()
workload_w_state %>% select(Year, State, pop_cat, min_funding, pop) %>% filter(Year == 2018) %>% View()
source('workload_calc.R')
workload_w_state %>% select(Year, State, pop_cat, min_funding, pop) %>% filter(Year == 2018) %>% View()
source('workload_calc.R')
workload_w_state %>% select(Year, State, pop_cat, min_funding, pop) %>% filter(Year == 2018) %>% View()
##area was unhelpful even without Alaska
ggplot(data = min_states %>% filter(State != 'Alaska'))+
aes(x = pop,
y = Area,
label = State)+
geom_text()+
geom_point()
#TODO make a visual argument for grouping for the minimums
min_states <-
workload_w_state %>%
filter(#Year == 2018,
min_funding)
##area was unhelpful even without Alaska
ggplot(data = min_states %>% filter(State != 'Alaska'))+
aes(x = pop,
y = Area,
label = State)+
geom_text()+
geom_point()
#TODO add better labeling
ggplot(data = min_states)+
aes(x = pop,
y = reorder(State, pop)) +
geom_point() +
scale_x_continuous(breaks = min_states %>% sequence_sd(pop)) +
scale_color_hue(h = c(0,180))
source('workload_calc.R')
##area was unhelpful even without Alaska
ggplot(data = min_states %>% filter(State != 'Alaska'))+
aes(x = pop,
y = Area,
label = State)+
geom_text()+
geom_point()
#TODO add better labeling
ggplot(data = min_states)+
aes(x = pop,
y = reorder(State, pop)) +
geom_point() +
scale_x_continuous(breaks = min_states %>% sequence_sd(pop)) +
scale_color_hue(h = c(0,180))
#TODO make a visual argument for grouping for the minimums
min_states <-
workload_w_state %>%
filter(Year == 2018,
min_funding)
#TODO add better labeling
ggplot(data = min_states)+
aes(x = pop,
y = reorder(State, pop)) +
geom_point() +
scale_x_continuous(breaks = min_states %>% sequence_sd(pop)) +
scale_color_hue(h = c(0,180))
+aes(color = factor(pop_cat))
#TODO add better labeling
ggplot(data = min_states)+
aes(x = pop,
y = reorder(State, pop)) +
geom_point() +
scale_x_continuous(breaks = min_states %>% sequence_sd(pop))
#TODO add better labeling
ggplot(data = min_states)+
aes(x = pop,
y = reorder(State, pop)) +
geom_point() +
scale_x_continuous(breaks = min_states %>% sequence_sd(pop)) +aes(color = factor(pop_cat))
source('workload_calc.R')
#TODO make a visual argument for grouping for the minimums
min_states <-
workload_w_state %>%
filter(Year == 2018,
min_funding)
#TODO add better labeling
ggplot(data = min_states)+
aes(x = pop,
y = reorder(State, pop)) +
geom_point() +
scale_x_continuous(breaks = min_states %>% sequence_sd(pop)) +aes(color = factor(pop_cat))
#TODO add better labeling
ggplot(data = min_states)+
aes(x = pop,
y = reorder(State, pop)) +
geom_point() +
scale_x_continuous(breaks = min_states %>% sequence_sd(pop)) +
aes(color = factor(pop_cat)) +
scale_color_brewer(palette = 'Dark2')
##area was unhelpful even without Alaska
ggplot(data = min_states %>% filter(State != 'Alaska'))+
aes(x = pop,
y = Area,
label = State)+
geom_text()+
geom_point()
ggplot(data = workload_w_state) +
aes(x = pop,
y = Area,
label = State,
color = funding_cat) +
geom_text()
View(workload_w_state)
ggplot(data = workload_w_state) +
aes(x = pop,
y = Area,
label = State,
color = fund_cat) +
geom_text()
ggplot(data = workload_w_state %>%  filter(Year == 2018)) +
aes(x = pop,
y = Area,
label = State,
color = fund_cat) +
geom_text()
##area was unhelpful even without Alaska
Text.Pop.Area.Grey.Dynamic <- function(df){
plot <- ggplot(data = df)+
aes(x = pop,
y = Area,
label = State)+
geom_text()
return(plot)
}
#adds a color to the name of the state, by funding category
add_color_by_fund_cat <- function(plot){
plot <-
plot +
aes(color = fund_cat) +
scale_color_hue(c(0,270))
return(plot)
}
#graphs name of the state against population and area
Text.Pop.Area.Grey.Dynamic <- function(df){
#TODO add labeling
plot <- ggplot(data = df)+
aes(x = pop,
y = Area,
label = State)+
geom_text()
return(plot)
}
#adds a color to the name of the state, by funding category
add_color_by_fund_cat <- function(plot){
#TODO add labeling
plot <-
plot +
aes(color = fund_cat) +
scale_color_hue(c(0,270))
return(plot)
}
Text.Pop.Area.Grey.Dynamic(workload_w_state %>% filter(Year ==2018, State !is.element('Alaska', 'Texas', 'California')))
Text.Pop.Area.Grey.Dynamic(workload_w_state %>% filter(Year ==2018, State is.element('Alaska', 'Texas', 'California')))
Text.Pop.Area.Grey.Dynamic(workload_w_state %>% filter(Year ==2018, State = is.element('Alaska', 'Texas', 'California')))
Text.Pop.Area.Grey.Dynamic(workload_w_state %>% filter(Year ==2018, State != is.element('Alaska', 'Texas', 'California')))
Text.Pop.Area.Grey.Dynamic(workload_w_state %>% filter(Year ==2018, State != is.element('Alaska', 'Texas', 'California')))
Text.Pop.Area.Grey.Dynamic(workload_w_state %>% filter(Year ==2018, State != 'Alaska' | State !=  'Texas'| State != 'California')))
Text.Pop.Area.Grey.Dynamic(workload_w_state %>% filter(Year ==2018, State != 'Alaska' | State !=  'Texas'| State != 'California'))
Text.Pop.Area.Grey.Dynamic(workload_w_state %>% filter(Year ==2018, State != 'Alaska' & State !=  'Texas'& State != 'California'))
Text.Pop.Area.Grey.Dynamic(workload_w_state %>%
filter(Year ==2018,
State != 'Alaska' & State !=  'Texas'& State != 'California')) %>%
add_color_by_fund_pop
Text.Pop.Area.Grey.Dynamic(workload_w_state %>%
filter(Year ==2018,
State != 'Alaska' & State !=  'Texas'& State != 'California')) %>%
add_color_by_fund_pop()
#adds a color to the name of the state, by funding category
add_color_by_fund_cat <- function(plot){
#TODO add labeling
plot <-
plot +
aes(color = fund_cat) +
scale_color_hue(c(0,270))
return(plot)
}
Text.Pop.Area.Grey.Dynamic(workload_w_state %>%
filter(Year ==2018,
State != 'Alaska' & State !=  'Texas'& State != 'California')) %>%
add_color_by_fund_pop()
State != 'Alaska' & State !=  'Texas'& State != 'California'))
add_color_by_fund_pop(Text.Pop.Area.Grey.Dynamic(workload_w_state %>%
filter(Year ==2018,
State != 'Alaska' & State !=  'Texas'& State != 'California')) )
add_color_by_fund_cat(Text.Pop.Area.Grey.Dynamic(workload_w_state %>%
filter(Year ==2018,
State != 'Alaska' & State !=  'Texas'& State != 'California')) )
#adds a color to the name of the state, by funding category
add_color_by_fund_cat <- function(plot){
#TODO add labeling
plot <-
plot +
aes(color = fund_cat) +
scale_color_hue(c(0,270))
return(plot)
}
add_color_by_fund_cat(Text.Pop.Area.Grey.Dynamic(workload_w_state %>%
filter(Year ==2018,
State != 'Alaska' & State !=  'Texas'& State != 'California')) )
#A text graph showing how funding compares to population
Text.pop.Funding.Grey.dynamic <- function(df){
plot <-
ggplot(data = df )+
aes(x = pop,
y = funding,
label = State) +
geom_text() +
theme_bw() +
#TODO format these into rounded intervals that are easier to read but scale with the graph
scale_x_continuous(breaks = df %>% sequence_sd(pop)) +
scale_y_continuous(breaks = df %>% sequence_sd(funding) ,
labels = df %>% sequence_sd(funding) %>% format_money2())
return(plot)
}
#TODO review R markdown to tell a story
#filters the data to just the states that recieved more than the minimum in 2018
non_min_states <-
workload_w_state %>%
filter(Year == 2018,
!min_funding)
#Graph shows that Cali, Texas, Florida and New York are very different from the remaining States
Text.pop.Funding.Grey.dynamic(non_min_states)
#lets get a look at the spread without those
non_min_states_small <-
non_min_states %>%
filter(State != 'Texas' & State != 'Florida' & State != 'California' & State != 'New York')
#graph shows a much less uneven spread in this smaller category
Text.pop.Funding.Grey.dynamic(non_min_states_small)
add_color_by_cat_pop <- function(plot){
plot +
aes(color = factor(pop_cat) )+
scale_color_brewer(palette = 'Dark2') +
#TODO change the legend labelling to be more informative(ex 'Group 1, Group 2' etc)
labs(color = 'Group number
by Population')
}
#shows distribution by color bucketing
add_color_by_cat_pop( Text.pop.Funding.Grey.dynamic(non_min_states_small))
#shows distribution by color bucketing
add_color_by_cat_pop( Text.pop.Funding.Grey.dynamic(non_min_states))
#TODO make a visual argument for grouping for the minimums
min_states <-
workload_w_state %>%
filter(Year == 2018,
min_funding)
#TODO add better labeling
#TODO break apart into two dif graphs
ggplot(data = min_states)+
aes(x = pop,
y = reorder(State, pop)) +
geom_point() +
scale_x_continuous(breaks = min_states %>% sequence_sd(pop)) +
aes(color = factor(pop_cat)) +
scale_color_brewer(palette = 'Dark2')
#graphs name of the state against population and area
Text.Pop.Area.Grey.Dynamic <- function(df){
#TODO add labeling
plot <- ggplot(data = df)+
aes(x = pop,
y = Area,
label = State)+
geom_text()
return(plot)
}
#adds a color to the name of the state, by funding category
add_color_by_fund_cat <- function(plot){
#TODO add labeling
plot <-
plot +
aes(color = fund_cat) +
scale_color_hue(c(0,270))
return(plot)
}
add_color_by_fund_cat(Text.Pop.Area.Grey.Dynamic(workload_w_state %>%
filter(Year ==2018,
State != 'Alaska' & State !=  'Texas'& State != 'California')) )
source('workload_calc.R')
source('workload_calc.R')
#preps the data for graphing
workload_w_state_18 <-
workload_w_state %>%
filter(Year == 2018) %>%
arrange(compare_cat_18,work_relative_resources) %>%
mutate(.r = row_number())
#Plots a single category
work_rel_resource_cat <- function(cat){
ggplot(data = workload_w_state_18 %>%
filter(compare_cat_18 == cat)) +
aes(x = reorder(State, -.r),
y = work_relative_resources,
fill = fund_cat) +
coord_flip() +
geom_col() +
scale_fill_hue(h = c(0,270))
}
workload_relative_funding_graph <-function(df){
ggplot(data= df)+
aes(x=Year, y= work_per_dol, label = State, color = fund_per_pop)+
geom_text() +
labs(x = "Year",
y = "*Workload Relative Resources",
color = '**Ratio of Funding per Capita',
title = 'Visual Exploration for State Performance(Workload) Relative to Comparable States',
subtitle = 'The State names that are vertically high, worked more cases for every dollar of funding they recieved.
State names that are light in color recieved many dollars for every person in the state. ',
caption = '*Workload equal to number of cases worked divided by funding
**Dollars of funding recieved per capita'
) +
scale_color_gradient()
}
df <- workload_w_state %>% filter(funding < 140000, fund_per_pop > .15)
workload_relative_funding_graph(df)
df <- workload_w_state %>% filter(pop_cat = 1)
workload_relative_funding_graph(df)
df <- workload_w_state %>% filter(pop_cat == 1)
workload_relative_funding_graph(df)
ggplot(data = workload_w_state) +
aes(x = pop,
y = workload)+
geom_point()
ggplot(data = workload_w_state) +
aes(x = log(pop),
y = workload)+
geom_point()
ggplot(data = workload_w_state) +
aes(x = pop,
y = workload)+
geom_point()
ggplot(data = workload_w_state) +
aes(x = log(pop),
y = workload)+
geom_point()
ggplot(data = workload_w_state) +
aes(x = log(pop),
y = workload,
color = pop_cat)+
geom_point()
ggplot(data = workload_w_state) +
aes(x = log(pop),
y = workload,
color = pop_cat)+
geom_point() +
scale_color_brewer(palette = "Dark2")
ggplot(data = workload_w_state) +
aes(x = log(pop),
y = workload,
color = factor(pop_cat))+
geom_point() +
scale_color_brewer(palette = "Dark2")
ggplot(data = workload_w_state) +
aes(x = log(pop),
y = workload,
color = pop_cat)+
geom_point() +
scale_color_hue(h = c(0,270))
ggplot(data = workload_w_state) +
aes(x = log(pop),
y = workload,
color = factor(pop_cat))+
geom_point() +
scale_color_hue(h = c(0,270))
ggplot(data = workload_w_state) +
aes(x = log(pop),
y = workload,
color = factor(Year))+
geom_point() +
scale_color_hue(h = c(0,270))
df <-
workload_w_state %>%
filter(pop_cat == 7)
ggplot(data = workload_w_state) +
aes(x = log(pop),
y = workload,
color = factor(Year))+
geom_point() +
scale_color_hue(h = c(0,270))
ggplot(data = df) +
aes(x = log(pop),
y = workload,
color = factor(Year))+
geom_point() +
scale_color_hue(h = c(0,270))
ggplot(data = df) +
aes(x = log(pop),
y = workload,
color = factor(Year),
label = State
)+
geom_text() +
scale_color_hue(h = c(0,270))
ggplot(data = df) +
aes(x = Year,
y = work_per_pop,
#color = factor(Year),
label = State
)+
geom_text() +
scale_color_hue(h = c(0,270))
ggplot(data = df) +
aes(x = Year,
y = work_per_pop,
color = dol_per_pop,
label = State
)+
geom_text() +
scale_color_hue(h = c(0,270))
ggplot(data = df) +
aes(x = Year,
y = work_per_pop,
color = fund_per_pop,
label = State
)+
geom_text() +
scale_color_hue(h = c(0,270))
ggplot(data = df) +
aes(x = Year,
y = work_per_pop,
color = factor(fund_per_pop),
label = State
)+
geom_text() +
scale_color_hue(h = c(0,270))
