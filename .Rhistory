workload_regression <-
workload_w_state %>%
group_by(State) %>%
summarise(p_value = p_calc(Year, work_per_pop, 8),
'p<.05' = (p_calc(Year, work_per_pop, 8)<.05 ),
'p<.01' = (p_calc(Year, work_per_pop, 8)<.01 ),
work_lm = p_calc(Year, work_per_pop, 2)
)
workload_regression <-
workload_w_state %>%
group_by(State) %>%
summarise(p_value = p_calc(Year, work_per_pop, 8),
'p<.10' = (p_calc(Year, work_per_pop, 8) < .1),
'p<.05' = (p_calc(Year, work_per_pop, 8)< .05 ),
'p<.01' = (p_calc(Year, work_per_pop, 8)< .01 ),
work_lm = p_calc(Year, work_per_pop, 2)
)
workload_w_state %>% filter(State == 'New Mexico')
workload_w_state %>% filter(State == 'New Mexico') %>% View()
df <- workload_w_state %>% filter(State == 'New Mexico')
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm)
workload_regression <-
workload_w_state %>%
group_by(State) %>%
summarise(p_value = p_calc(Year, work_per_pop, 8),
'p<.10' = (p_calc(Year, work_per_pop, 8) < .1),
'p<.05' = (p_calc(Year, work_per_pop, 8)< .05 ),
'p<.01' = (p_calc(Year, work_per_pop, 8)< .01 ),
work_lm = p_calc(Year, work_per_pop, 2)
) %>%
test <- inner_join(workload_w_state, workload_regression, by = 'State')
workload_regression <-
workload_w_state %>%
group_by(State) %>%
summarise(p_value = p_calc(Year, work_per_pop, 8),
'p<.10' = (p_calc(Year, work_per_pop, 8) < .1),
'p<.05' = (p_calc(Year, work_per_pop, 8)< .05 ),
'p<.01' = (p_calc(Year, work_per_pop, 8)< .01 ),
work_lm = p_calc(Year, work_per_pop, 2)
)
test <- inner_join(workload_w_state, workload_regression, by = 'State')
View(test)
df <- workload_w_state %>% filter('p<.10',
pop_cat ==7)
df <- workload_w_state %>% filter(p_value < .10,
pop_cat ==7)
df <- test %>% filter(p_value < .10,
pop_cat ==7)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
View(df)
df <- test %>% filter(p_value < .10,
pop_cat ==6)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
df <- test %>% filter(p_value < .10,
pop_cat ==5)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
df <- test %>% filter(p_value < .10,
pop_cat ==4)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
df <- test %>% filter(p_value < .10,
pop_cat ==3)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
df <- test %>% filter(p_value < .10,
pop_cat ==4)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
df <- test %>% filter(p_value < .10,
pop_cat ==2)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
df <- test %>% filter(p_value < .10,
pop_cat ==1)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
df %>% distinct(State) %>% nrow()
df <- test %>% filter(p_value < .10)
df %>% distinct(State) %>% nrow()
df %>% distinct(State) %>% nrow()
df <- test %>% filter(p_value < .10,
pop_cat ==-1)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
df <- test %>% filter(p_value < .10,
pop_cat ==-2)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
df <- test %>% filter(p_value < .10,
pop_cat ==-3)
df %>% distinct(State) %>% nrow()
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
df <- test %>% filter(p_value < .10,
pop_cat ==-4)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
df <- test %>% filter(p_value < .10,
pop_cat ==-5)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
df <- test %>% filter(p_value < .10,
pop_cat ==-6)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
df <- workload_w_state %>% filter(State == 'Wyoming')
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
workload_regression %>% filter(p_value < .10, work_lm < .5)
workload_regression %>% filter(p_value < .10, work_lm < .5)
workload_regression %>% filter(p_value < .10 & work_lm < .5)
workload_regression %>% filter(p_value < .10 & work_lm < .5)
workload_regression %>% filter(p_value < .10 & work_lm > -.5)
df <- test %>% filter(p_value < .10,
pop_cat ==7)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
workload_regression %>% filter(p_value < .10 & work_lm > -.2)
workload_regression %>% filter(p_value < .10 & work_lm > -.2)
df <- test %>% filter(p_value < .10 & work_lm > -.2)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
workload_regression %>% filter(p_value < .10 & work_lm > -.1)
df <- test %>% filter(p_value < .10 & work_lm > -.1)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
df <- test %>% filter(p_value < .10 & work_lm > -.1 &  work_lm  <0)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
workload_regression %>% filter(p_value < .10 & work_lm > -.2)
workload_regression <-
workload_w_state %>%
group_by(State) %>%
summarise(p_value = p_calc(Year, workload, 8),
'p<.10' = (p_calc(Year, workload, 8) < .1),
'p<.05' = (p_calc(Year, workload, 8)< .05 ),
'p<.01' = (p_calc(Year, workload, 8)< .01 ),
work_lm = p_calc(Year, workload, 2)
)
test <- inner_join(workload_w_state, workload_regression, by = 'State')
df <- test %>% filter(p_value < .10 & work_lm > -.2 )
workload_regression %>% filter(p_value < .10 & work_lm > -.2)
workload_regression <-
workload_w_state %>%
group_by(State) %>%
summarise(p_value = p_calc(Year, work_per_pop, 8),
'p<.10' = (p_calc(Year, work_per_pop, 8) < .1),
'p<.05' = (p_calc(Year, work_per_pop, 8)< .05 ),
'p<.01' = (p_calc(Year, work_per_pop, 8)< .01 ),
work_lm = p_calc(Year, work_per_pop, 2)
)
workload_regression %>% filter(p_value < .10)
workload_regression %>% filter(p_value < .05)
workload_regression <-
workload_w_state %>%
group_by(State) %>%
summarise(p_value = p_calc(Year, workload, 8),
'p<.10' = (p_calc(Year, workload, 8) < .1),
'p<.05' = (p_calc(Year, workload, 8)< .05 ),
'p<.01' = (p_calc(Year, workload, 8)< .01 ),
work_lm = p_calc(Year, workload, 2)
)
workload_regression %>% filter(p_value < .05)
work_test <- workload_regression %>% filter(p_value < .05)
workload_regression <-
workload_w_state %>%
group_by(State) %>%
summarise(p_value = p_calc(Year, work_per_pop, 8),
'p<.10' = (p_calc(Year, work_per_pop, 8) < .1),
'p<.05' = (p_calc(Year, work_per_pop, 8)< .05 ),
'p<.01' = (p_calc(Year, work_per_pop, 8)< .01 ),
work_lm = p_calc(Year, work_per_pop, 2)
)
work_per_pop_test <- workload_regression %>% filter(p_value < .05)
View(work_per_pop_test)
View(work_test)
View(work_per_pop_test)
View(work_test)
View(work_per_pop_test)
View(work_test)
View(work_per_pop_test)
View(work_test)
View(work_test)
View(work_per_pop_test)
workload_regression <-
workload_w_state %>%
group_by(State) %>%
summarise(p_value = p_calc(Year, work_per_pop, 8),
'p<.10' = (p_calc(Year, work_per_pop, 8) < .1),
'p<.05' = (p_calc(Year, work_per_pop, 8)< .05 ),
'p<.01' = (p_calc(Year, work_per_pop, 8)< .01 ),
work_lm = p_calc(Year, work_per_pop, 2)
)
test <- inner_join(workload_w_state, workload_regression, by = 'State')
df <- test %>% filter(p_value < .10 & work_lm > -.2 )
workload_relative_funding_graph <-function(df){
ggplot(data= df)+
aes(x=Year,
y= work_per_dol,
label = State,
color = fund_per_pop)+
geom_text() +
labs(x = "Year",
y = "*Workload Relative Resources",
color = '**Ratio of Funding per Capita',
title = 'Visual Exploration for State Performance(Workload) Relative to Comparable States',
subtitle = 'The State names that are vertically high, worked more cases for every dollar of funding they recieved.
State names that are light in color recieved many dollars for every person in the state. ',
caption = '*Workload equal to number of cases worked divided by funding
**Dollars of funding recieved per capita'
) +
scale_color_gradient()
}
#Graph shows that Cali, Texas, Florida and New York are very different from the remaining States
Text.pop.Funding.Grey.dynamic(non_min_states) +
scale_x_continuous(breaks = seq(4000000,43000000, by = 3500000),
labels = seq(4,43, by = 3.5)) +
scale_y_continuous(breaks = seq(150000,1500000, by=100000),
labels = seq(.15,1.5, by=.1)) +
labs(x = 'Population of the State(in millions)**',
y = 'Dollars of funding(in millions)*',
title = 'Visual Exploration for Comparable States Receiving Above Minimum Funding in 2018(CAP)',
subtitle = 'State names that are spatially near each other(as measured by funding and population) may be comparable.',
caption = '*Funding amounts drawn from RSA CAP appropriations
**Estimated Population drawn from Census Bureau')
#A text graph showing how funding compares to population
Text.pop.Funding.Grey.dynamic <- function(df){
plot <-
ggplot(data = df )+
aes(x = pop,
y = funding,
label = State) +
geom_text(position = 'nudge') +
theme_bw()
#TODO format these into rounded intervals that are easier to read but scale with the graph
return(plot)
}
#TODO review R markdown to tell a story
#filters the data to just the states that recieved more than the minimum in 2018
non_min_states <-
workload_w_state %>%
filter(Year == 2018,
!min_funding)
#Graph shows that Cali, Texas, Florida and New York are very different from the remaining States
Text.pop.Funding.Grey.dynamic(non_min_states) +
scale_x_continuous(breaks = seq(4000000,43000000, by = 3500000),
labels = seq(4,43, by = 3.5)) +
scale_y_continuous(breaks = seq(150000,1500000, by=100000),
labels = seq(.15,1.5, by=.1)) +
labs(x = 'Population of the State(in millions)**',
y = 'Dollars of funding(in millions)*',
title = 'Visual Exploration for Comparable States Receiving Above Minimum Funding in 2018(CAP)',
subtitle = 'State names that are spatially near each other(as measured by funding and population) may be comparable.',
caption = '*Funding amounts drawn from RSA CAP appropriations
**Estimated Population drawn from Census Bureau')
#lets get a look at the spread without those
non_min_states_small <-
non_min_states %>%
filter(State != 'Texas' & State != 'Florida' & State != 'California' & State != 'New York')
#graph shows a much less uneven spread in this smaller category
Text.pop.Funding.Grey.dynamic(non_min_states_small)
#shows distribution by color bucketing
Text.pop.Funding.Grey.dynamic(non_min_states_small) +
aes(color = factor(-pop_cat) )+
scale_color_brewer(palette = 'Dark2', labels = c('Illinois,\nOhio,\nPennsylvania\n',
'Georgia,\nMichigan,\nNorth Carolina\n',
'New Jersey,\nVirginia\n',
'Arizona,\nIndiana,\nMassachusetts,\nTennessee\nWashington\n',
'Colorado,\nMaryland,\nMinnesota,\nMissouri,\nWisconsin\n',
'Alabama,\nKentucky,\nLouisiana,\nSouth Carolina')) +
scale_x_continuous(breaks = seq(4000000,12000000, by = 1000000),
labels = seq(4,12, by = 1)) +
scale_y_continuous(breaks = seq(150000,450000, by=50000),
labels = round(seq(.15,.45, by=.05),2 )) +
labs(x = 'Population of the State(in millions)**',
y = 'Dollars of funding(in millions)*',
title = 'Visual Argument for Comparable States Receiving Above Minimum Funding in 2018(CAP)',
subtitle = 'State names that are spatially near each other(as measured by funding and population) may be comparable.
Group and color are determined by the combined methodology of group sizes no less than two and population similarity.',
caption = '*Funding amounts drawn from RSA CAP appropriations
**Estimated Population drawn from Census Bureau',
color = 'Grouping')
df <- test %>% filter(p_value < .10 & work_lm > -.1 & work_lm < 0 )
source('~/.active-rstudio-document', echo=TRUE)
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
p_calc <- function(x, y, value){
lm_regress <- summary(lm(y ~ x))
r <- round(lm_regress[['coefficients']][value], 2)
return(r)
}
workload_regression <-
workload_w_state %>%
group_by(State) %>%
summarise(p_value = p_calc(Year, work_per_pop, 8),
'p<.10' = (p_calc(Year, work_per_pop, 8) < .1),
'p<.05' = (p_calc(Year, work_per_pop, 8)< .05 ),
'p<.01' = (p_calc(Year, work_per_pop, 8)< .01 ),
work_lm = p_calc(Year, work_per_pop, 2)
)
test <- inner_join(workload_w_state, workload_regression, by = 'State')
df <- test %>% filter(p_value < .10 & work_lm > -.1 & work_lm < 0 )
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
#shows distribution by color bucketing
Text.pop.Funding.Grey.dynamic(non_min_states_small) +
aes(color = factor(-pop_cat) )+
scale_color_brewer(palette = 'Dark2', labels = c('Illinois,\nOhio,\nPennsylvania\n',
'Georgia,\nMichigan,\nNorth Carolina\n',
'New Jersey,\nVirginia\n',
'Arizona,\nIndiana,\nMassachusetts,\nTennessee\nWashington\n',
'Colorado,\nMaryland,\nMinnesota,\nMissouri,\nWisconsin\n',
'Alabama,\nKentucky,\nLouisiana,\nSouth Carolina')) +
scale_x_continuous(breaks = seq(4000000,12000000, by = 1000000),
labels = seq(4,12, by = 1)) +
scale_y_continuous(breaks = seq(150000,450000, by=50000),
labels = round(seq(.15,.45, by=.05),2 )) +
labs(x = 'Population of the State(in millions)**',
y = 'Dollars of funding(in millions)*',
title = 'Visual Argument for Comparable States Receiving Above Minimum Funding in 2018(CAP)',
subtitle = 'State names that are spatially near each other(as measured by funding and population) may be comparable.
Group and color are determined by the combined methodology of group sizes no less than two and population similarity.',
caption = '*Funding amounts drawn from RSA CAP appropriations
**Estimated Population drawn from Census Bureau',
color = 'Grouping')
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
#shows distribution by color bucketing
Text.pop.Funding.Grey.dynamic(non_min_states_small) +
aes(color = factor(-pop_cat) )+
scale_color_brewer(palette = 'Dark2', labels = c('Illinois,\nOhio,\nPennsylvania\n',
'Georgia,\nMichigan,\nNorth Carolina\n',
'New Jersey,\nVirginia\n',
'Arizona,\nIndiana,\nMassachusetts,\nTennessee\nWashington\n',
'Colorado,\nMaryland,\nMinnesota,\nMissouri,\nWisconsin\n',
'Alabama,\nKentucky,\nLouisiana,\nSouth Carolina')) +
scale_x_continuous(breaks = seq(4000000,12000000, by = 1000000),
labels = seq(4,12, by = 1)) +
scale_y_continuous(breaks = seq(150000,450000, by=50000),
labels = round(seq(.15,.45, by=.05),2 )) +
labs(x = 'Population of the State(in millions)**',
y = 'Dollars of funding(in millions)*',
title = 'Visual Argument for Comparable States Receiving Above Minimum Funding in 2018(CAP)',
subtitle = 'State names that are spatially near each other(as measured by funding and population) may be comparable.
Group and color are determined by the combined methodology of group sizes no less than two and population similarity.',
caption = '*Funding amounts drawn from RSA CAP appropriations
**Estimated Population drawn from Census Bureau',
color = 'Grouping')
workload_regression <-
workload_w_state %>%
group_by(State) %>%
summarise(p_value = p_calc(Year, work_per_pop, 8),
'p<.10' = (p_calc(Year, work_per_pop, 8) < .1),
'p<.05' = (p_calc(Year, work_per_pop, 8)< .05 ),
'p<.01' = (p_calc(Year, work_per_pop, 8)< .01 ),
work_lm = p_calc(Year, work_per_pop, 2)
)
test <- inner_join(workload_w_state, workload_regression, by = 'State')
df <- test %>% filter(p_value < .10 & work_lm > -.1 & work_lm < 0 )
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
#Initial snapshot to see if theres any major players
workload_w_state %>% group_by(State) %>% summarise(cor(Year, work_per_pop, method = 'spearman') ) %>% View()
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
df <- test %>% filter(p_value < .10 & work_lm < -.9  )
ggplot(data = df)+
aes(x = Year,
y = work_per_pop
) +
geom_point()+
geom_smooth(method = lm) +
facet_grid(.~State)
test %>% filter(p_value < .10)
test %>% filter(p_value < .10, year == 2018
test %>% filter(p_value < .10, year == 2018)
test %>% filter(p_value < .10& year == 2018)
test %>% filter(p_value < .10& Year == 2018)
test %>% filter(p_value < .90 & Year == 2018)
test %>% filter(p_value < .90 & Year == 2018) %>% View()
test %>% filter(p_value < .10 & work_lm < -.9& Year == 2018) %>% View()
test %>% filter(p_value < .10 & work_lm < -.9&) %>% View()
test %>% filter(p_value < .10 & work_lm < -.9&) %>% arrange(State, Year) %>% View()
test %>% filter(p_value < .10 & work_lm < -.9) %>% arrange(State, Year) %>% View()
