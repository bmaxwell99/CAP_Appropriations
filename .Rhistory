scale_fill_hue(h = c(90, 270)
#breaks = sequence(data_2018)
)
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dol_per_pop_18)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
#show.legend = TRUE
) +
geom_col() +
coord_flip() +
#guides(color = guide_legend()) +
xlab("States") +
ylab("Dollars of Funding Recieved per Population")+
scale_fill_hue(h = c(90, 270)
#breaks = sequence(data_2018)
)
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dol_per_pop_18)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
#show.legend = TRUE
) +
geom_col() +
coord_flip() +
#guides(color = guide_legend()) +
xlab("States") +
ylab("Dollars of Funding Recieved per Population")+
scale_fill_hue(h = c(30, 270)
#breaks = sequence(data_2018)
)
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dol_per_pop_18)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population")+
scale_fill_hue(h = c(0, 270))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population")+
scale_fill_hue(h = c(0, 270))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population")+
scale_fill_hue(h = c(0, 90))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population")+
scale_fill_hue(h = c(0, 270))
#plots the stnd deviations from the mean by dollars recieved by state
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  , y = stndevs , show.legend = TRUE) +
geom_point() +
coord_flip() +
guides(fill=FALSE) +
xlab("States") +
ylab("Dollars of Funding")+
labs(color = 'Dollars of Funding')
#plots the dollars recieevd as a histogram
ggplot(data = data_2018) +
aes(x = dollar_2018) +
geom_histogram(binwidth = 25000) +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_x_discrete(name = 'dollars', labels = as.character(seq(min(data_2018$dollar_2018), max(data_2018$dollar_2018), 25000) )
)
ggplot(data = data_2018) +
aes(x = data_2018$dollar_2018) +
stat_function(fun = dnorm, n = n_distinct(data_2018$dollar_2018), args = list(mean = mean(data_2018$dollar_2018), sd = sd(data_2018$dollar_2018)))
ggplot(data = data_2018) +
aes(x = data_2018$dollar_2018) +
stat_function(fun = rnorm, n = n_distinct(data_2018$dollar_2018), args = list(mean = mean(data_2018$dollar_2018), sd = sd(data_2018$dollar_2018)))
data_2018 %>%
mutate(stndevs = (abs(dollar_2018 - mean(data_2018$dollar_2018))) / sd(data_2018$dollar_2018)) %>%
View()
#plots the dollars recieevd as a histogram
ggplot(data = data_2018 %>%
mutate(stndevs = (abs(dollar_2018 - mean(data_2018$dollar_2018))) / sd(data_2018$dollar_2018)) ) +
aes(x = dollar_2018) +
geom_histogram(binwidth = 25000) +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
scale_x_discrete(name = 'dollars', labels = as.character(seq(min(data_2018$dollar_2018), max(data_2018$dollar_2018), 25000) )
)
#plots the stnd deviations from the mean by dollars recieved by state
ggplot(data = data_2018 %>%
mutate(stndevs = (abs(dollar_2018 - mean(data_2018$dollar_2018))) / sd(data_2018$dollar_2018)) ) +
aes(x = reorder(State, -dollar_2018)  , y = stndevs , show.legend = TRUE) +
geom_point() +
coord_flip() +
guides(fill=FALSE) +
xlab("States") +
ylab("Dollars of Funding")+
labs(color = 'Dollars of Funding')
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population")+
scale_fill_hue(h = c(0, 270))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  sequence(j_data)
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population")+
scale_fill_hue(h = c(0, 270))
#creates a sequence of the given data, only created for code concision
sequence <- function(df) {
return(seq(min(df$dollar_2018), max(df$dollar_2018), 20000 ))
}
data_2018<-
j_data %>%
select(State, dollar_2018, pop_18, dol_per_pop_18,normalized_dol) %>%
#attempt to bucket data
mutate(funding_cat = cut_interval(dollar_2018,
length = 25000,
labels = sequence(j_data)))
j_data <-
j_data %>%
mutate(dol_per_pop_18 = round(dollar_2018 / pop_18, digits = 5)) %>%
mutate(pop_per_dol_18 = round(pop_18 / dollar_2018, digits = 5)) %>%
mutate(normalized_dol = round(dollar_2018 / 131917, digits = 2))
data_2018<-
j_data %>%
select(State, dollar_2018, pop_18, dol_per_pop_18,normalized_dol) %>%
#attempt to bucket data
mutate(funding_cat = cut_interval(dollar_2018,
length = 25000,
labels = sequence(j_data)))
j_data <-
j_data %>%
mutate(dol_per_pop_18 = round(dollar_2018 / pop_18, digits = 5)) %>%
mutate(pop_per_dol_18 = round(pop_18 / dollar_2018, digits = 5)) %>%
mutate(normalized_dol = round(dollar_2018 / 131917, digits = 2))
data_2018<-
j_data %>%
select(State, dollar_2018, pop_18, dol_per_pop_18,normalized_dol) %>%
#attempt to bucket data
mutate(funding_cat = cut_interval(dollar_2018,
length = 20000,
labels = sequence(j_data)))
#sets WD to git repo folder, change to run on different computer
setwd("C:/Users/dark_/Documents/NDRN/CAP_Appropriations")
source('Clean_join_data.r')
#creates a sequence of the given data, only created for code concision
sequence <- function(df) {
return(seq(min(df$dollar_2018), max(df$dollar_2018), 20000 ))
}
j_data <-
j_data %>%
mutate(dol_per_pop_18 = round(dollar_2018 / pop_18, digits = 5)) %>%
mutate(pop_per_dol_18 = round(pop_18 / dollar_2018, digits = 5)) %>%
mutate(normalized_dol = round(dollar_2018 / 131917, digits = 2))
data_2018<-
j_data %>%
select(State, dollar_2018, pop_18, dol_per_pop_18,normalized_dol) %>%
#attempt to bucket data
mutate(funding_cat = cut_interval(dollar_2018,
length = 20000,
labels = sequence(j_data)))
#creates a sequence of the given data, only created for code concision
sequence <- function(df) {
return(seq(min(df$dollar_2018), max(df$dollar_2018), 25000 ))
}
j_data <-
j_data %>%
mutate(dol_per_pop_18 = round(dollar_2018 / pop_18, digits = 5)) %>%
mutate(pop_per_dol_18 = round(pop_18 / dollar_2018, digits = 5)) %>%
mutate(normalized_dol = round(dollar_2018 / 131917, digits = 2))
data_2018<-
j_data %>%
select(State, dollar_2018, pop_18, dol_per_pop_18,normalized_dol) %>%
#attempt to bucket data
mutate(funding_cat = cut_interval(dollar_2018,
length = 25000,
labels = sequence(j_data)))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  sequence(j_data)
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population")+
scale_fill_hue(h = c(0, 270))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  seq(min(data_2018$dollar_2018), max(data_2018$dollar_2018), 20000 )
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population")+
scale_fill_hue(h = c(0, 270))
seq(min(data_2018$dollar_2018), max(data_2018$dollar_2018), 20000 ) %>% length()
seq(min(data_2018$dollar_2018), max(data_2018$dollar_2018), 22000 ) %>% length()
seq(min(data_2018$dollar_2018), max(data_2018$dollar_2018), 23000 ) %>% length()
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  seq(min(data_2018$dollar_2018), max(data_2018$dollar_2018), 23000 )
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population")+
scale_fill_hue(h = c(0, 270))
as.discrete(seq(min(data_2018$dollar_2018), max(data_2018$dollar_2018), 23000 ))
discrete(seq(min(data_2018$dollar_2018), max(data_2018$dollar_2018), 23000 ))
seq(min(data_2018$dollar_2018), max(data_2018$dollar_2018), 23000 )
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  seq(min(data_2018$dollar_2018), max(data_2018$dollar_2018), 23000 )
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population")+
scale_fill_hue(h = c(0, 270))
unlist(seq(min(data_2018$dollar_2018), max(data_2018$dollar_2018), 23000 ))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  unlist(seq(min(data_2018$dollar_2018), max(data_2018$dollar_2018), 23000 )
)) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population")+
scale_fill_hue(h = c(0, 270))
?rep
rep(10,1)
rep(1,10)
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  unlist(seq(min(data_2018$dollar_2018), max(data_2018$dollar_2018), 23000 )
)) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population")#+
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  seq(min(data_2018$dollar_2018), max(data_2018$dollar_2018), 23000 )
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population")#+
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  dollar_2018
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population")#+
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  dollar_2018
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population") +
scale_fill_hue(h = c(0, 270))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  dollar_2018
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population") +
scale_color_hue(h = c(0, 270))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  dollar_2018
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population") #+
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population") +
scale_color_hue(h = c(0, 270))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population") +
scale_color_hue(h = c(0, 90))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population") +
scale_fill_hue(h = c(0, 270))
#sets WD to git repo folder, change to run on different computer
setwd("C:/Users/dark_/Documents/NDRN/CAP_Appropriations")
source('Clean_join_data.r')
#creates a sequence of the given data, only created for code concision
sequence <- function(df) {
return(seq(min(df$dollar_2018), max(df$dollar_2018), 10000 ))
}
j_data <-
j_data %>%
mutate(dol_per_pop_18 = round(dollar_2018 / pop_18, digits = 5)) %>%
mutate(pop_per_dol_18 = round(pop_18 / dollar_2018, digits = 5)) %>%
mutate(normalized_dol = round(dollar_2018 / 131917, digits = 2))
data_2018<-
j_data %>%
select(State, dollar_2018, pop_18, dol_per_pop_18,normalized_dol) %>%
#attempt to bucket data
mutate(funding_cat = cut_interval(dollar_2018,
length = 10000,
labels = sequence(j_data)))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population") +
scale_fill_hue(h = c(0, 270))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  cut_interval(dollar_2018,
length = 10000,
labels = sequence(j_data))
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population") +
scale_fill_hue(h = c(0, 270))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population") +
scale_fill_hue(h = c(0, 270))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population") +
scale_fill_hue(h = c(0, 270))
?reorder_within
??reorder_within
??reorder_within()
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, dollar_2018)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population") +
scale_fill_hue(h = c(0, 270))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, dol_per_pop_18)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population") +
scale_fill_hue(h = c(0, 270))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dol_per_pop_18)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population") +
scale_fill_hue(h = c(0, 270))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dol_per_pop_18)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population") +
scale_fill_hue(h = c(0, 270))
bucket_size <- 10000
#creates a sequence of the given data, only created for code concision
sequence <- function(df) {
return(seq(min(df$dollar_2018), max(df$dollar_2018), bucket_size ))
}
j_data <-
j_data %>%
mutate(dol_per_pop_18 = round(dollar_2018 / pop_18, digits = 5)) %>%
mutate(pop_per_dol_18 = round(pop_18 / dollar_2018, digits = 5)) %>%
mutate(normalized_dol = round(dollar_2018 / 131917, digits = 2))
data_2018<-
j_data %>%
select(State, dollar_2018, pop_18, dol_per_pop_18) %>%
#attempt to bucket data
mutate(funding_cat = cut_interval(dollar_2018,
length = bucket_size,
labels = sequence(j_data)))
#plots against dollars recieved per population
ggplot(data = data_2018 ) +
aes(x = reorder(State, -dol_per_pop_18)  ,
y = dol_per_pop_18 ,
fill =  funding_cat
) +
geom_col() +
coord_flip() +
xlab("States") +
ylab("Dollars of Funding Recieved per Population") +
scale_fill_hue(h = c(0, 270))
